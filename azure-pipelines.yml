# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/python

trigger:
- master
- release-*

jobs:

- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      # Python27:
      #   python.version: '2.7'
      Python36:
        python.version: '3.6'
    maxParallel: 4
  steps:
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: >
        python=$(python.version)
        conda-build
        conda-verify
        pycodestyle
        pydocstyle
      updateConda: True # Optional
  - bash: conda build . --no-anaconda-upload -c conda-forge
    displayName: Conda build
  - bash: pycodestyle --count -v .
    displayName: Run python code linter
  - bash: pydocstyle --match='(?!utils).*\.py' --count -v tike/
    displayName: Run python docstring linter

- job: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  strategy:
    matrix:
      # Python27:
      #   python.version: '2.7'
      Python36:
        python.version: '3.6'
    maxParallel: 4
  steps:
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'python=$(python.version) conda-build conda-verify'
      updateConda: True # Optional
  - bash: conda build . --no-anaconda-upload -c conda-forge
    displayName: Conda build

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
    maxParallel: 4
  steps:
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'python=$(python.version) conda-build conda-verify'
      updateConda: True # Optional
      installOptions: '-c conda-forge'
  - bash: conda config --add channels conda-forge
    displayName: Set main channel to conda-forge
  - bash: conda build . --no-anaconda-upload -c conda-forge
    displayName: Conda build
